<!-- This is an example component -->
<div class="h-screen">
  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>

  <div x-data="app()" x-cloak>
    <div class="w-screen mx-auto px-4 py-10">

      <div x-show.transition="step === 'complete'" class="flex justify-center">
        <div class="bg-white flex items-center justify-between md:shadow md:rounded md:p-10 max-w-full">
          <div>
            <svg class="mb-4 h-20 w-20 text-green-500 mx-auto" viewBox="0 0 20 20" fill="currentColor">  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg>

            <h2 class="text-2xl mb-4 text-gray-800 text-center font-bold">Registration Success</h2>

            <div class="text-gray-600 mb-8">
              Thank you. Your client is now created
            </div>

            <div class=" border-gray-100 bg-yellow-200 rounded my-2 p-4 shadow">
              <h3 class="text-md mb-2 text-gray-800 text-center font-bold">Client ID:</h3>
              <p class="text-gray-800 text-center" x-text="client.id"></p>
            </div>

            <div x-show="client.secret" class=" border-gray-100 bg-yellow-200 rounded my-2 p-4 shadow">
              <h3 class="text-md mb-2 text-gray-800 text-center font-bold">Client secret:</h3>
              <p class="text-gray-800 text-center" x-text="client.secret"></p>
            </div>

            <a
              href="/clients"
              class="w-40 block mx-auto focus:outline-none py-2 px-5 rounded-lg shadow-sm text-center text-gray-600 bg-white hover:bg-gray-100 font-medium border" 
            >Back to home</a>
          </div>
        </div>
      </div>

      <div x-show.transition="step != 'complete'">	
        <!-- Top Navigation -->
        <div class="border-b-2 py-2">
          <div class="uppercase tracking-wide text-xs font-bold text-gray-500 mb-1 leading-tight" x-text="`Step: ${step} of 3`"></div>
          <div class="flex flex-col md:flex-row md:items-center md:justify-between">
            <div class="flex-1">
              <div x-show="step === 1">
                <div class="text-lg font-bold text-gray-700 leading-tight">Client info</div>
              </div>
              
              <div x-show="step === 2">
                <div class="text-lg font-bold text-gray-700 leading-tight">Allowed Scopes</div>
              </div>

              <div x-show="step === 3">
                <div class="text-lg font-bold text-gray-700 leading-tight">OAuth2.0 configuration</div>
              </div>
            </div>

            <div class="flex items-center md:w-64">
              <div class="w-full bg-white rounded-full mr-2">
                <div class="rounded-full bg-green-500 text-xs leading-none h-2 text-center text-white" :style="'width: '+ parseInt(step / 3 * 100) +'%'"></div>
              </div>
              <div class="text-xs w-10 text-gray-600" x-text="parseInt(step / 3 * 100) +'%'"></div>
            </div>
          </div>
        </div>
        <!-- /Top Navigation -->

        <!-- Step Content -->
        <div class="py-10">	
          <div x-show.transition.in="step === 1">
            {{!-- <div class="mb-5 text-center">
              <div class="mx-auto w-32 h-32 mb-2 border rounded-full relative bg-gray-100 mb-4 shadow-inset">
                <img id="image" class="object-cover w-full h-32 rounded-full" :src="image" />
              </div>
              <label 
                for="fileInput"
                type="button"
                class="cursor-pointer inine-flex justify-between items-center focus:outline-none border py-2 px-4 rounded-lg shadow-sm text-left text-gray-600 bg-white hover:bg-gray-100 font-medium"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="inline-flex flex-shrink-0 w-6 h-6 -mt-1 mr-1" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="0" y="0" width="24" height="24" stroke="none"></rect>
                  <path d="M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
                  <circle cx="12" cy="13" r="3" />
                </svg>						
                Browse File
              </label>
              <div class="mx-auto w-48 text-gray-500 text-xs text-center mt-1">Click to add client logo</div>
              <input name="photo" id="fileInput" accept="image/*" class="hidden" type="file" @change="let file = document.getElementById('fileInput').files[0]; 
                var reader = new FileReader();
                reader.onload = (e) => image = e.target.result;
                reader.readAsDataURL(file);">
            </div> --}}

            <div class="mb-5">
              <label for="name" class="font-bold mb-1 text-gray-700 block">Client name</label>
              <input type="text"
                id="name"
                required
                autofocus
                x-model="client.name"
                class="bg-gray-200 text-gray-700 focus:outline-none focus:shadow-outline border border-gray-300 rounded py-2 px-4 block w-full appearance-none"
                placeholder="Client name">
            </div>

            <div class="mb-5">
              <label for="description" class="font-bold mb-1 text-gray-700 block">Description</label>
              <input type="text"
                id="description"
                x-model="client.description"
                class="bg-gray-200 text-gray-700 focus:outline-none focus:shadow-outline border border-gray-300 rounded py-2 px-4 block w-full appearance-none"
                placeholder="Client description">
            </div>
          </div>

          <div x-show.transition.in="step === 2">

            <div class="mb-5">
              
            </div>

          </div>

          <div x-show.transition.in="step === 3">
            <div class="mb-5">
              <label for="email" class="font-bold mb-1 text-gray-700 block">Client Type</label>
              
              <div class="flex flex-col">
                <label
                  class="flex justify-start items-center text-truncate rounded-lg bg-white pl-4 pr-6 py-3 mr-4">
                  <div class="text-teal-600 mr-3">
                    <input type="radio" x-model="client.type" value="confidential" class="form-radio focus:outline-none focus:shadow-outline" />
                  </div>
                  <div class="select-none text-gray-700">Confidential client</div>
                </label>
                <div x-show.transition.in="client.type === 'confidential'" class="bg-teal-lightest border-t-4 border-teal rounded-b text-teal-darkest px-4 py-3 shadow-md my-2" role="alert">
                  <div class="flex">
                    <div>
                      <p class="font-bold">Client secret will be generated and MUST be stored safely</p>
                      <p class="text-sm">Confidential clients are applications that are able to securely authenticate with the authorization server, for example being able to keep their registered client secret safe.</p>
                    </div>
                  </div>
                </div>

                <label
                  class="flex justify-start items-center text-truncate rounded-lg bg-white pl-4 pr-6 py-3">
                  <div class="text-teal-600 mr-3">
                    <input type="radio" x-model="client.type" value="public" class="form-radio focus:outline-none focus:shadow-outline" />
                  </div>
                  <div class="select-none text-gray-700">Public client</div>
                </label>
                <div x-show.transition.in="client.type === 'public'" class="bg-teal-lightest border-t-4 border-teal rounded-b text-teal-darkest px-4 py-3 shadow-md my-2" role="alert">
                  <div class="flex">
                    <div>
                      <p class="font-bold">No secret will be generated</p>
                      <p class="text-sm">Public clients are unable to use registered client secrets, such as applications running in a browser (ie. Single Page Application) or on a mobile device.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="mb-5">
              <label for="email" class="font-bold mb-1 text-gray-700 block">Allowed callback URIs</label>
              <input type="text"
                required
                x-model="client.allowedURI"
                class="bg-gray-200 text-gray-700 focus:outline-none focus:shadow-outline border border-gray-300 rounded py-2 px-4 block w-full appearance-none"
                placeholder="http://example.com/callback">
            </div>
            <p>Separate values by a comma</p>
          </div>
        </div>
        <!-- / Step Content -->
      </div>
    </div>

    <!-- Bottom Navigation -->	
    <div class="fixed bottom-0 left-0 right-0 py-5 bg-white shadow-md" x-show="step != 'complete'">
      <div class="max-w-3xl mx-auto px-4">
        <div class="flex justify-between">
          <div class="w-1/2">
            <button
              x-show="step > 1"
              @click="step--"
              class="w-32 focus:outline-none py-2 px-5 rounded-lg shadow-sm text-center text-gray-600 bg-white hover:bg-gray-100 font-medium border" 
            >Previous</button>
          </div>

          <div class="w-1/2 text-right">
            <button
              x-show="step < 3"
              @click="step++"
              class="w-32 focus:outline-none border border-transparent py-2 px-5 rounded-lg shadow-sm text-center text-white bg-blue-500 hover:bg-blue-600 font-medium" 
            >Next</button>

            <button
              @click="send()"
              x-show="step === 3"
              class="w-32 focus:outline-none border border-transparent py-2 px-5 rounded-lg shadow-sm text-center text-white bg-blue-500 hover:bg-blue-600 font-medium" 
            >Complete</button>
          </div>
        </div>
      </div>
    </div>
    <!-- / Bottom Navigation https://placehold.co/300x300/e2e8f0/cccccc -->	
  </div>

  <script>
    function app() {
      return {
        step: 1, 
        client: {
          name: '',
          description: '',
          type: 'confidential',
          allowedURI: '',
        },
        send() {
          fetch('/clients/add', {
            method: 'POST',
            cache: 'no-cache',
            credentials: 'same-origin',
            headers: {
              'Content-Type': 'application/json',
              'CSRF-Token': '{{csrfToken}}'
            },
            body: JSON.stringify(Object.assign(
              {}, this.client, { allowedURI: this.client.allowedURI.split(',') }
            ))
          })
          .then((response) => response.json())
          .then((result) => {
            this.client = result
            this.step = 'complete'
          })
        }
      }
    }
  </script>